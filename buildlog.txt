# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/macondoswashcaps/METADATA.json /home/travis/build/fontdirectory/macondoswashcaps/builds/build
$ cp -a /home/travis/build/fontdirectory/macondoswashcaps/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/macondoswashcaps/builds/build
$ cp -a /home/travis/build/fontdirectory/macondoswashcaps/FONTLOG.txt /home/travis/build/fontdirectory/macondoswashcaps/builds/build
$ cp -a MacondoSwashCaps-Regular.ttf.ttx src/MacondoSwashCaps-Regular.otf.ttx src/MacondoSwashCaps-Regular-TTF.sfd MacondoSwashCaps-Regular.ttf._p_r_e_p.ttx MacondoSwashCaps-Regular.ttf._p_o_s_t.ttx MacondoSwashCaps-Regular.ttf._n_a_m_e.ttx MacondoSwashCaps-Regular.ttf._m_a_x_p.ttx MacondoSwashCaps-Regular.ttf._l_o_c_a.ttx MacondoSwashCaps-Regular.ttf._h_m_t_x.ttx MacondoSwashCaps-Regular.ttf._h_h_e_a.ttx MacondoSwashCaps-Regular.ttf._h_e_a_d.ttx MacondoSwashCaps-Regular.ttf._g_l_y_f.ttx MacondoSwashCaps-Regular.ttf._g_a_s_p.ttx MacondoSwashCaps-Regular.ttf._c_m_a_p.ttx MacondoSwashCaps-Regular.ttf.O_S_2f_2.ttx MacondoSwashCaps-Regular.ttf.GlyphOrder.ttx MacondoSwashCaps-Regular.ttf.G_S_U_B_.ttx MacondoSwashCaps-Regular.ttf.G_P_O_S_.ttx MacondoSwashCaps-Regular.ttf.G_D_E_F_.ttx MacondoSwashCaps-Regular.ttf.F_F_T_M_.ttx MacondoSwashCaps-Regular.ttf.D_S_I_G_.ttx src/MacondoSwashCaps-Regular.otf._p_o_s_t.ttx src/MacondoSwashCaps-Regular.otf._n_a_m_e.ttx src/MacondoSwashCaps-Regular.otf._m_a_x_p.ttx src/MacondoSwashCaps-Regular.otf._k_e_r_n.ttx src/MacondoSwashCaps-Regular.otf._h_m_t_x.ttx src/MacondoSwashCaps-Regular.otf._h_h_e_a.ttx src/MacondoSwashCaps-Regular.otf._h_e_a_d.ttx src/MacondoSwashCaps-Regular.otf._c_m_a_p.ttx src/MacondoSwashCaps-Regular.otf.O_S_2f_2.ttx src/MacondoSwashCaps-Regular.otf.GlyphOrder.ttx src/MacondoSwashCaps-Regular.otf.C_F_F_.ttx /home/travis/build/fontdirectory/macondoswashcaps/builds/build/sources
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ fontbakery-check.py upstream-repo sources
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/macondoswashcaps/builds/build/sources/MacondoSwashCaps-Regular.otf.ttx /home/travis/build/fontdirectory/macondoswashcaps/builds/build/sources/MacondoSwashCaps-Regular.ttf.ttx /home/travis/build/fontdirectory/macondoswashcaps/builds/build/sources/MacondoSwashCaps-Regular-TTF.sfd > fontaine.txt
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
pyfontaine error: Not a TrueType or OpenType font (bad sfntVersion)
pyfontaine process has been failed
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): OK
$ fontbakery-check.py upstream-ttx MacondoSwashCaps-Regular.otf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/sources/MacondoSwashCaps-Regular.otf.ttx /home/travis/build/fontdirectory/macondoswashcaps/builds/build/sources/MacondoSwashCaps-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ fontbakery-check.py upstream-ttx MacondoSwashCaps-Regular.ttf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/sources/MacondoSwashCaps-Regular.ttf.ttx /home/travis/build/fontdirectory/macondoswashcaps/builds/build/sources/MacondoSwashCaps-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ fontbakery-check.py upstream MacondoSwashCaps-Regular-TTF.sfd
bakery_lint.tests.upstream.test_unicode_value_should_appear_only_once_per_font.UnicodeValueShouldAppearOnlyOnce.testUnicodeValue(): ERROR
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_contour_count.TestContourCount.test_contour_count(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/macondoswashcaps/builds/build /home/travis/build/fontdirectory/macondoswashcaps/builds/build/sources/MacondoSwashCaps-Regular.ttx
strippedname:/home/travis/build/fontdirectory/macondoswashcaps/builds/build/sources/MacondoSwashCaps-Regular-TTF.sfd
Compiling "/home/travis/build/fontdirectory/macondoswashcaps/builds/build/sources/MacondoSwashCaps-Regular.ttx" to "/home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'prep' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'DSIG' table...
### Test MacondoSwashCaps-Regular.ttf
$ fontbakery-check.py result MacondoSwashCaps-Regular.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf.fix /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf.fix /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf.fix /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf.fix /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf.fix /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
### Optimize TTF MacondoSwashCaps-Regular.ttf
$ ls -l 'MacondoSwashCaps-Regular.ttf'* # look at the size savings of that subset process
MacondoSwashCaps-Regular.ttf.opt: 31328 bytes
MacondoSwashCaps-Regular.ttf: 33056 bytes
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf.opt /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf
### Autohint TTFs (ttfautohint) MacondoSwashCaps-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf '/home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf: 31328 bytes
/home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.autohint.ttf: 49640 bytes
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.autohint.ttf /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf
### Subset TTFs (pyftsubset) MacondoSwashCaps-Regular.ttf
$ pyftsubset MacondoSwashCaps-Regular.latin
$ pyftsubset MacondoSwashCaps-Regular.menu
strippedname:/home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular.ttf
No nbsp glyph
spaceWidth is    300
nbspWidth is     0
MacondoSwashCaps-Regular.ttf.fix made with spaceWidth and nbspWidth of 300
$ fontbakery-build-font2ttf.py sources/MacondoSwashCaps-Regular-TTF.sfd MacondoSwashCaps-Regular-TTF.ttf
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf)
### Test MacondoSwashCaps-Regular-TTF.ttf
$ fontbakery-check.py result MacondoSwashCaps-Regular-TTF.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
### Optimize TTF MacondoSwashCaps-Regular-TTF.ttf
$ ls -l 'MacondoSwashCaps-Regular-TTF.ttf'* # look at the size savings of that subset process
MacondoSwashCaps-Regular-TTF.ttf.opt: 30992 bytes
MacondoSwashCaps-Regular-TTF.ttf: 32968 bytes
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf.opt /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf
### Autohint TTFs (ttfautohint) MacondoSwashCaps-Regular-TTF.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf '/home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf: 30992 bytes
/home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.autohint.ttf: 48924 bytes
$ mv /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.autohint.ttf /home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf
### Subset TTFs (pyftsubset) MacondoSwashCaps-Regular-TTF.ttf
$ pyftsubset MacondoSwashCaps-Regular-TTF.latin
$ pyftsubset MacondoSwashCaps-Regular-TTF.menu
strippedname:/home/travis/build/fontdirectory/macondoswashcaps/builds/build/MacondoSwashCaps-Regular-TTF.ttf
No nbsp glyph
spaceWidth is    300
nbspWidth is     0
MacondoSwashCaps-Regular-TTF.ttf.fix made with spaceWidth and nbspWidth of 300
### (5 of 6) Generate METADATA.json (fontbakery-build-metadata.py)
$ fontbakery-build-metadata.py /home/travis/build/fontdirectory/macondoswashcaps/builds/build
{} exists
Designer's name from font is: John Vargas Beltran
Original size: 49640\nGzip size: 25995
Family Name: Macondo Swash Caps
PS Name: MacondoSwashCaps-Regular
Full Name: Macondo Swash Caps
Style: normal
Weight: 400
Filename: MacondoSwashCaps-Regular-TTF.ttf
Copyright: Copyright (c) 1997 - 2011, John Vargas Beltran. (www.johnvargasbeltran.com|john.vargasbeltran@gmail.com), with Reserved Font Name "Macondo"
Family Name: Macondo Swash Caps
PS Name: MacondoSwashCaps-Regular
Full Name: Macondo Swash Caps
Style: normal
Weight: 400
Filename: MacondoSwashCaps-Regular.ttf
Copyright: Copyright (c) 1997 - 2011, John Vargas Beltran. (www.johnvargasbeltran.com|john.vargasbeltran@gmail.com), with Reserved Font Name "Macondo"
Error: 
ERROR: BUILD FAILED
